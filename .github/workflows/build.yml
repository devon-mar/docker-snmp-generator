---
name: build latest

on:
  push:
    branches: [master]
  pull_request:
  schedule:
    - cron: "0 0 * * 0"

  workflow_dispatch:
    inputs:
      snmp_exporter_version:
        description: "snmp_exporter version to use"
        required: true
        default: "latest"

env:
  TEST_TAG: generatortest

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5

      - name: Download MIBS
        run: |
          make mibs

      - name: Build and export to Docker
        uses: docker/build-push-action@v6
        with:
          context: .
          load: true
          tags: ${{ env.TEST_TAG }}

      - name: Test
        run: |
          docker run -v "${{ github.workspace }}/test/":/opt/generator/ ${{ env.TEST_TAG }} generate --no-fail-on-parse-errors

      - name: Login to DockerHub
        if: ${{ github.ref == 'refs/heads/master' }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push (Docker Hub)
        if: ${{ github.ref == 'refs/heads/master' }}
        uses: docker/build-push-action@v6
        with:
          context: .
          tags: devonm/snmp-generator:${{ github.event.inputs.from_tag || env.DEFAULT_FROM_TAG }}
          push: true
          build-args: SNMP_EXPORTER_VERSION=${{ github.event.inputs.snmp_exporter_version || env.DEFAULT_FROM_TAG }}
        env:
          DEFAULT_FROM_TAG: latest

      - name: Login to GitHub Container Registry
        if: ${{ github.ref == 'refs/heads/master' }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push (GHCR)
        if: ${{ github.ref == 'refs/heads/master' }}
        uses: docker/build-push-action@v6
        with:
          context: .
          tags: ghcr.io/devon-mar/snmp-generator:${{ github.event.inputs.from_tag || env.DEFAULT_FROM_TAG }}
          push: true
          build-args: SNMP_EXPORTER_VERSION=${{ github.event.inputs.snmp_exporter_version || env.DEFAULT_FROM_TAG }}
        env:
          DEFAULT_FROM_TAG: latest
